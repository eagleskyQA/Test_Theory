Функциональное и нефункциональное тестирование (Functional / non-functional testing)

1. Функциональное тестирование - это один из видов тестирования, направленный на проверку соответствий функциональных требований ПО к его реальным характеристикам. Основной задачей является проверка того, что наш разрабатываемый продукт обладает всем функционалом, который требует заказчик. Проводится на всех уровнях.

2. Нефункциональное тестирование. Необходимость проверки свойств приложения с его нефункциональными требованиями, т.е. мы проверяем как наша система работает. Это тестирование свойств, которые не относятся к функционалам системы. К примеру к таким свойствам можно отнести надежность (реакцию системы на непредвиденные ситуации), а так-же тестирование на отказ и восстановление (failover and recovery testing). Это исследование програмной системы на предмет восстановления после ошибок и сбоев.

Так же сюда входит тестирование производительности (тестирование системы под разными нагрузками). Это большой пласт навыков и инструментариев, поэтому существуют тестировшики, которые занимаются именно этим видома тестирования.
Тестирование производительности - это комплекс видов тестирования, целью которых является определение работоспособности, стабильности, потребления ресурсов и других атрибутов качества приложения в условиях различных сценариев использования и нагрузок. Тестирование производительности можно разделить на несколько видов:

- Нагрузочное - это проверка производительности при нормальных условиях, т.е. если заявлено, что на сайте должно одновременно находится 1000 пользователей, то мы создаем специальные условия (например в программе Jmeter), имитирующие нагрузку системы на количество пользователей приблизительно равное 1000;

- Стресс - проверка работоспособности системы при экстримальных нагрузках, т.е. более 1000;

- Тестирование стабильности - проверка приложения при длительной работе;

- Объемное тестирования - это тестирование системы при увеличенных объемах обрабатываемых данных, т.е. когда те же 1000 пользователей одновременно отправляют n-ное количество мегабайт информации.

Тестирование удобства использования - это тестирование удобства использования приложения с точки зрения использования пользователем (usability testing). Заключается в оценке соответствия дизайна приложения к его функциональностям, которые задаются заказчиком. Так же здесь мы можем исследовать используемые графические элементы, цветовые оформления с точки зрения восприятия пользователями, удобство навигации и ссылки, которые есть на сайте, анализ текстового наполнения сайта. Так же существует такая характеристика, как обучаемость. Например, когда пользователь зашел на ресурс, как быстро он сообразит как им пользоваться, используя свой прошлый опыт использования похожего приложения.

Тестирование безопасности (safety/security) - защищенность пользовательских данных.

Инсталяционное и конфигурационное тестирование (кроссбраузерное и кроссплатформенное) - переносимость нашего приложения на разные платформы.
- Тестирование установки - проверяется успешность установки приложения, настройки, обновление и удаление.
- Конфигурационное тестирование - исследуем работоспособность програмной системы в условиях различных програмных конфигураций (кроссплатформенное и кроссбраузерное тестирование)

Тестирование локализации (/10n) - это процесс адаптации ПО к языку клиента. Например проверка насколько продукт переведен на язык, финансовые обозначения соответствия стране, на чей язык мы переводим ПО, контроль формата даты и времени, правовые особенности, раскладка клавиатуры пользователя и т.д.

Тестирование GUI - проверка соответствия приложения к требованиям графического интерфейса, наскольпо профессионально оно выглядит, выполнено ли оно в одном стиле, на том ли месте находятся кнопки, как на шаблоне от дизайнера.

Тестирование доступности (accessibility testing) - проверка ПО общепринятым стандартам доступности. Должно быть доступно людям с ограниченными возможностями. Тут так же подразумеваются люди, которые полностью здоровы, но в данный момент ограничены в возможностях (к примеру едут за рулем и могут только слушать).


По исполнению сценария:

- Ad-hoc тестирование - представляет собой тестирование без использования каких либо спек, планов и тест-кейсов, т.е. импровизация

- Исследовательское - подразумевает, что каждый следующий тест выбираетсяна основании результата предыдущего теста, хотя и не требует написания тест-кейсов.

- Сценарное тестирование - классическое тестирование по заранее написанной тестовой документации.


По запуску кода:

- Статическое тестирование - не предволагается, что программный код во время тестирования будет выполняться, т. е. мы его не запускаем. Начинается на ранних этапах жизни цикла ПО и является частью процесса верификации (тестирование форм документации);

- Динамическое тестирование - тип тестирования, который предполагает запуск кода, т. е. анализируется поведение программы во время ее работы.
